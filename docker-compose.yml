version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      args:
        # Pass the Google API Key as a build argument
        - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    container_name: agent-backend
    ports:
      - "8000:8000" # Map host port 8000 to container port 8000
    environment:
      # Pass the Google API Key from your host environment or a .env file
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    volumes:
      # Mount cache directories as volumes to persist them across container restarts
      - ./sustainability_research_agent/pdf_cache:/app/pdf_cache
      - ./sustainability_research_agent/summary_cache:/app/summary_cache
    # Add healthcheck if needed
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:8000/"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.ui
    container_name: agent-frontend
    ports:
      - "8501:8501" # Map host port 8501 to container port 8501
    environment:
      # Point the Streamlit app to the backend service name defined in this compose file
      - API_BASE_URL=http://backend:8000
      # Streamlit specific env vars if needed
      # - STREAMLIT_SERVER_PORT=8501
    depends_on:
      - backend # Ensure backend starts before frontend (doesn't guarantee backend is ready though)

volumes:
  pdf_cache_vol: # Define named volumes (alternative to bind mounts)
  summary_cache_vol:

# Note: To use named volumes instead of bind mounts:
# Change backend volumes section to:
#    volumes:
#      - pdf_cache_vol:/app/sustainability_research_agent/pdf_cache
#      - summary_cache_vol:/app/sustainability_research_agent/summary_cache
# This keeps cache data within Docker's managed volume area.
